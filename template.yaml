AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "cloud-resume-challenge"
Globals:
  Function:
    Timeout: 3
Resources:
  MyWebsite:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: cloud-resume-challenge44
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: WebPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref MyWebsite
                - /*
      Bucket: !Ref MyWebsite
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "Serverless website in S3"
  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: cloud-resume-challenge44.s3-website.us-east-2.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: cloud-resume-challenge44.s3-website.us-east-2.amazonaws.com
            Id: cloud-resume-challenge44.s3-website.us-east-2.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html
  GetCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        DynamoDBCrudPolicy:
          TableName: cloud-resume-challenge
      CodeUri: get-function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
      - x86_64
      Events:
        IncrementCount:
          Type: HttpApi
          Properties:
            Path: /get
            Method: get
    Metadata:
      SamResourceId: GetCountFunction
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: stat
        AttributeType: S
      KeySchema:
      - AttributeName: stat
        KeyType: HASH
    Metadata:
      SamResourceId: DynamoDBTable
Outputs:
  ViewCounterAPI:
    Description: API Gateway for resume view counter
    Value:
      Fn::Sub: https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/get
  GetCountFunction:
    Description: GetCountFunction Lambda Function ARN
    Value:
      Fn::GetAtt:
      - GetCountFunction
      - Arn
  GetCountFunctionIamRole:
    Description: Implicit IAM Role created for GetCountFunction
    Value:
      Fn::GetAtt:
      - GetCountFunctionRole
      - Arn